from typing import List, Tuple


class Solution:
    def numIslands(self, grid: List[List[str]]) -> int:
        m: int = len(grid)
        n: int = len(grid[0])
        counter = 0
        for i in range(m):
            for j, val in enumerate(grid[i]):
                if val == "1":

                    def dfs(x: int, y: int):
                        grid[x][y] = 0
                        directions: List[Tuple[int, int]] = [
                            (1, 0),
                            (0, 1),
                            (-1, 0),
                            (0, -1),
                        ]
                        for d1, d2 in directions:
                            new_x = x + d1
                            new_y = y + d2
                            if (
                                0 <= new_x <= m - 1
                                and 0 <= new_y <= n - 1
                                and grid[new_x][new_y] == "1"
                            ):
                                dfs(new_x, new_y)

                    dfs(i, j)
                    counter += 1
        return counter


if __name__ == "__main__":
    grid = [
        [
            "1",
            "0",
            "0",
            "1",
            "1",
            "1",
            "0",
            "1",
            "1",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
        ],
        [
            "1",
            "0",
            "0",
            "1",
            "1",
            "0",
            "0",
            "1",
            "0",
            "0",
            "0",
            "1",
            "0",
            "1",
            "0",
            "1",
            "0",
            "0",
            "1",
            "0",
        ],
        [
            "0",
            "0",
            "0",
            "1",
            "1",
            "1",
            "1",
            "0",
            "1",
            "0",
            "1",
            "1",
            "0",
            "0",
            "0",
            "0",
            "1",
            "0",
            "1",
            "0",
        ],
        [
            "0",
            "0",
            "0",
            "1",
            "1",
            "0",
            "0",
            "1",
            "0",
            "0",
            "0",
            "1",
            "1",
            "1",
            "0",
            "0",
            "1",
            "0",
            "0",
            "1",
        ],
        [
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "1",
            "1",
            "1",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
        ],
        [
            "1",
            "0",
            "0",
            "0",
            "0",
            "1",
            "0",
            "1",
            "0",
            "1",
            "1",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "1",
            "0",
            "1",
        ],
        [
            "0",
            "0",
            "0",
            "1",
            "0",
            "0",
            "0",
            "1",
            "0",
            "1",
            "0",
            "1",
            "0",
            "1",
            "0",
            "1",
            "0",
            "1",
            "0",
            "1",
        ],
        [
            "0",
            "0",
            "0",
            "1",
            "0",
            "1",
            "0",
            "0",
            "1",
            "1",
            "0",
            "1",
            "0",
            "1",
            "1",
            "0",
            "1",
            "1",
            "1",
            "0",
        ],
        [
            "0",
            "0",
            "0",
            "0",
            "1",
            "0",
            "0",
            "1",
            "1",
            "0",
            "0",
            "0",
            "0",
            "1",
            "0",
            "0",
            "0",
            "1",
            "0",
            "1",
        ],
        [
            "0",
            "0",
            "1",
            "0",
            "0",
            "1",
            "0",
            "0",
            "0",
            "0",
            "0",
            "1",
            "0",
            "0",
            "1",
            "0",
            "0",
            "0",
            "1",
            "0",
        ],
        [
            "1",
            "0",
            "0",
            "1",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "1",
            "0",
            "0",
            "1",
            "0",
            "1",
            "0",
            "1",
            "0",
        ],
        [
            "0",
            "1",
            "0",
            "0",
            "0",
            "1",
            "0",
            "1",
            "0",
            "1",
            "1",
            "0",
            "1",
            "1",
            "1",
            "0",
            "1",
            "1",
            "0",
            "0",
        ],
        [
            "1",
            "1",
            "0",
            "1",
            "0",
            "0",
            "0",
            "0",
            "1",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "1",
            "0",
            "0",
            "0",
            "1",
        ],
        [
            "0",
            "1",
            "0",
            "0",
            "1",
            "1",
            "1",
            "0",
            "0",
            "0",
            "1",
            "1",
            "1",
            "1",
            "1",
            "0",
            "1",
            "0",
            "0",
            "0",
        ],
        [
            "0",
            "0",
            "1",
            "1",
            "1",
            "0",
            "0",
            "0",
            "1",
            "1",
            "0",
            "0",
            "0",
            "1",
            "0",
            "1",
            "0",
            "0",
            "0",
            "0",
        ],
        [
            "1",
            "0",
            "0",
            "1",
            "0",
            "1",
            "0",
            "0",
            "0",
            "0",
            "1",
            "0",
            "0",
            "0",
            "1",
            "0",
            "1",
            "0",
            "1",
            "1",
        ],
        [
            "1",
            "0",
            "1",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "1",
            "0",
            "0",
            "0",
            "1",
            "0",
            "1",
            "0",
            "0",
            "0",
            "0",
        ],
        [
            "0",
            "1",
            "1",
            "0",
            "0",
            "0",
            "1",
            "1",
            "1",
            "0",
            "1",
            "0",
            "1",
            "0",
            "1",
            "1",
            "1",
            "1",
            "0",
            "0",
        ],
        [
            "0",
            "1",
            "0",
            "0",
            "0",
            "0",
            "1",
            "1",
            "0",
            "0",
            "1",
            "0",
            "1",
            "0",
            "0",
            "1",
            "0",
            "0",
            "1",
            "1",
        ],
        [
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "1",
            "1",
            "1",
            "1",
            "0",
            "1",
            "0",
            "0",
            "0",
            "1",
            "1",
            "0",
            "0",
            "0",
        ],
    ]
    sol = Solution()
    print(sol.numIslands(grid))
